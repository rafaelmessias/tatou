ITD_RESS

0: tatou3d -- model?
1: [768] Tatou's palette
2: [64770] Tatou's image (Infogrames logo). Bytes 2 to 770 are its own palette (not sure what the first 2 bytes are). The funny thing is that file 1 in this PAK is also the Tatou's palette, but they are apparently different, but look the same...? I don't know.
3: [768] Main palette for the rest of the game.

3D Models:
- 2 bytes: flags
  - bit 2: on if the model has bones
  - bit 3: off if the model does not have bones (not sure about this one...?)
  - bit 4: some modifier for the bones (...?) if this is set, each bone has 24 bytes, else 16 bytes. It seems to indicate some extra rotation is necessary for the bone.
- 12 bytes: bounding box
  - 2 bytes each: min_x, max_x, min_y, max_y, min_z, max_z
- 2 bytes: unknown offset
  - skip this before proceeding
  - seems to be mostly filled with zeros. Maybe a placeholder memory block?
- 2 bytes: num of points (aka numOfPoints, numPointInPoly)
- Points: numOfPoints * 3 * 2 (each point/vertex is 6 bytes: 2 bytes per each (X,Y,Z)
- If model has bones:
    - 2 bytes: num of bone offsets
    - Bone offsets: num of bone offsets * 2 (each bone offset is 2-bytes)
    - if bit 3 of flags is set, three angles are located at bytes 10, 12, and 14 after all the bone offsets are read.
      - It is unclear to me what happens if bit 3 is not set (not sure if this space is used or left empty)
    - A bone offset points forward in the file
    - Actual bone (starting at an offset):
      - 2 bytes: offset of starting vertex (from the vertex buffer)
      - 2 bytes: number of vertices
      - 2 bytes: parent vertex...? 
      - 1 byte: ...?
      - 1 byte: used as a check in computeBoneRotation (if 0 the rotation is not performed)
      - 2 bytes: type
      - 6 bytes: x, y and z of a translation (2 bytes each)
      - The type determines the translation. 
        - Type 1 is a normal translation.
        - Type 2 is a weird translation and I have no idea what it means.

...?

# Notes:

  * More info: https://kb.speeddemosarchive.com/Alone_in_the_Dark_(1-3)/Game_Mechanics_and_Glitches

  * All models are stored upside down, with the up vector towards the negative direction...?
  
  * It seems that spheres are actually never really fully drawn, but only circles.
  
  * Z-fighting is a problem. I have no idea how this was solved originally. The fighting polygons have
    the exact same Z coordinate.

  * Culling the back faces of primitives will sometimes result in holes in the models. See, for example,
    the inside of the open wardrobe from the first room. It seems that this was expected, because some 
    of the primitives actually have back-facing counterparts. See again the wardrobe, open doors, and
    also the open chest with the blue material on the inside (culling the back face solvez z-fighting).
    So, I assume that culling the back face is the right thing to do, and the holes do not appear in 
    the game due to the fixed camera position (need to check to make sure).

  * Bones must be translated in the order they appear in the file, and not in the order of the bone
    offsets. I assume that the bone offsets are for rotating instead.
